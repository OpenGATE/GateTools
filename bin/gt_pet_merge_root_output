#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import click
import gatetools as gt
import logging

logger = logging.getLogger(__name__)

CONTEXT_SETTINGS = dict(help_option_names=['-h', '--help'])


@click.command(context_settings=CONTEXT_SETTINGS)
@click.argument('root_filenames', nargs=-1)
@click.option('--output', '-o', help='Output root filename', required=True,
              type=click.Path(dir_okay=False,
                              writable=True, readable=False,
                              resolve_path=True, allow_dash=False, path_type=None))
@gt.add_options(gt.common_options)
def pet_merge_root_output(root_filenames, output, **kwargs):
    """
    Input : several root files, output from GATE PET simulation
    Output : one single merged root, taking into account the eventID and the time
    """

    # logger
    gt.logging_conf(**kwargs)
    verbose = kwargs["verbose"]

    # Read and merge all the root files.
    # We cannot use the merge_root tools (that merge generic root files) because,
    # here, we take into account some information (eventID, time) to merge PET
    # output from GATE simulations
    gt.pet_merge_root_output(root_filenames, output, verbose)


# --------------------------------------------------------------------------
if __name__ == '__main__':
    pet_merge_root_output()
